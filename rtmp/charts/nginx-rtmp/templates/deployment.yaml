{{- $fullname := (include "nginx-rtmp.fullname" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-rtmp.fullname" . }}
  labels:
    {{- include "nginx-rtmp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nginx-rtmp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nginx-rtmp.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nginx-rtmp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ include "nginx-rtmp.imageTag" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- with .Values.storage }}
          volumeMounts:
            - name: {{ .data.name }}
              mountPath: "/opt/data"
            - name: config
              mountPath: "/etc/nginx/nginx.conf.template"
              subPath: "nginx.conf.template"
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ if .Values.nginxConfigMap -}}
                         {{- .Values.nginxConfigMap -}}
                       {{- else -}}
                         {{- $fullname }}-config
                       {{- end }}
      {{- with .Values.storage }}
        - name: {{ .data.name }}
          {{- if .data.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .data.existingClaim -}}
                         {{- .data.existingClaim -}}
                       {{- else -}}
                         {{- $fullname }}-{{ .data.name -}}
                       {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
